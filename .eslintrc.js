module.exports = {
  parser: '@typescript-eslint/parser',
  extends: [
    'prettier',
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:jest/recommended',
    'plugin:testing-library/react',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
  ],
  plugins: [
    'jsx-a11y',
    'unused-imports',
    '@typescript-eslint',
    'simple-import-sort',
    'import-quotes',
    'import',
  ],
  settings: {
    'import/resolver': {
      typescript: {},
    },
  },
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  rules: {
    'no-shadow': 'off',
    'no-console': 'off',
    'global-require': 'off',
    'react/prop-types': 'off',
    'import/extensions': 'off',
    'no-param-reassign': 'off',
    'no-use-before-define': 'off',
    'no-underscore-dangle': 'off',
    'no-useless-constructor': 'off',
    'no-parameter-properties': 'off',
    'react/react-in-jsx-scope': 'off',
    'react-hooks/rules-of-hooks': 'warn',
    'react/jsx-props-no-spreading': 'off',
    'import/prefer-default-export': 'off',
    'simple-import-sort/exports': 'error',
    'testing-library/no-node-access': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    'unused-imports/no-unused-imports': 'error',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/no-extra-semi': 'warn',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-empty-function': 'warn',
    'unused-imports/no-unused-imports': 'warn',
    'testing-library/await-async-query': 'off',
    'jsx-a11y/click-events-have-key-events': 'warn',
    'testing-library/render-result-naming-convention': 'off',
    'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
    'simple-import-sort/imports': 'error',
    'simple-import-sort/exports': 'error',
    'no-console': 'off',
    'no-restricted-syntax': [
      'error',
      {
        selector:
          "CallExpression[callee.object.name='console'][callee.property.name!=/^(log|warn|error|info|trace)$/]",
        message: 'Unexpected property on console object was called',
      },
    ],
    'import-quotes/import-quotes': [1, 'single'],
    'object-curly-spacing': ['error', 'always'],
    semi: [1, 'never'],
  },
}
